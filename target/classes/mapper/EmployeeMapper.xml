<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrms.dao.EmployeeMapper">
	<resultMap id="BaseResultMap" type="com.hrms.bean.Employee">
		<id column="emp_id" jdbcType="INTEGER" property="empId" />
		<result column="empno" jdbcType="VARCHAR" property="empno" />
		<result column="emp_name" jdbcType="VARCHAR" property="empName" />
		<result column="gender" jdbcType="CHAR" property="gender" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="birthTime" jdbcType="VARCHAR" property="birthTime" />
		<result column="d_id" jdbcType="INTEGER" property="dId" />
		<result column="jobid" jdbcType="INTEGER" property="jobid" />
	</resultMap>
	<resultMap id="withDeptResultMap" type="com.hrms.bean.Employee">
		<id column="emp_id" jdbcType="INTEGER" property="empId" />
		<result column="empno" jdbcType="VARCHAR" property="empno" />
		<result column="emp_name" jdbcType="VARCHAR" property="empName" />
		<result column="gender" jdbcType="CHAR" property="gender" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="birthTime" jdbcType="VARCHAR" property="birthTime" />
		<result column="d_id" jdbcType="INTEGER" property="dId" />
		<result column="jobid" jdbcType="INTEGER" property="jobid" />
		<association property="job" column="jobid"
			select="com.hrms.dao.JobMapper.selectByPrimaryKey" />
		<association property="department" column="d_id"
			select="com.hrms.dao.DepartmentMapper.selectByPrimaryKey"></association>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		emp_id, empno, emp_name, gender, email,phone,birthTime, d_id,jobid
	</sql>
	<sql id="WithDept_Column_List">
		emp_id, empno, emp_name, gender, email,phone,birthTime,d_id,jobid
	</sql>
	<!-- List<Employee> selectByExampleWithDept(EmployeeExample example); Employee 
		selectByPrimaryKeyWithDept(Integer empId); -->
	<select id="selectByExampleWithDept" resultMap="withDeptResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="WithDept_Column_List"></include>
		from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKeyWithDept" resultMap="withDeptResultMap">
		select
		<include refid="WithDept_Column_List" />
		from employee e left join deptment d on e.d_id = d.ID
		where emp_id =
		#{empId,jdbcType=INTEGER}
	</select>


	<select id="selectByExample" parameterType="com.hrms.bean.EmployeeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from employee
		where emp_id = #{empId,jdbcType=INTEGER}
	</select>

	<select id="selectByDeptId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from employee
		where d_id = #{dId,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		employee
		where emp_id = #{empId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.hrms.bean.EmployeeExample">
		delete from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hrms.bean.Employee">
		insert into employee (emp_id,
		emp_name, gender,
		email, d_id)
		values (#{empId,jdbcType=INTEGER},
		#{empName,jdbcType=VARCHAR},
		#{gender,jdbcType=CHAR},
		#{email,jdbcType=VARCHAR}, #{dId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.hrms.bean.Employee">
		insert into employee
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="empId != null">emp_id,</if>
			<if test="empno != null">empno,</if>
			<if test="empName != null">emp_name,</if>
			<if test="gender != null">gender,</if>
			<if test="email != null">email,</if>
			<if test="phone != null">phone,</if>
			<if test="birthTime != null">birthTime,</if>
			<if test="dId != null">d_id,</if>
			<if test="jobid != null">jobid,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="empId != null">#{empId,jdbcType=INTEGER},</if>
			<if test="empno != null">#{empno,jdbcType=VARCHAR},</if>
			<if test="empName != null">#{empName,jdbcType=VARCHAR},</if>
			<if test="gender != null">#{gender,jdbcType=CHAR},</if>
			<if test="email != null">#{email,jdbcType=VARCHAR},</if>
			<if test="phone != null">#{phone,jdbcType=VARCHAR},</if>
			<if test="birthTime != null">#{birthTime,jdbcType=VARCHAR},</if>
			<if test="dId != null">#{dId,jdbcType=INTEGER},</if>
			<if test="jobid != null">#{jobid,jdbcType=VARCHAR},</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hrms.bean.EmployeeExample"
		resultType="java.lang.Long">
		select count(*) from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update employee
		<set>
			<if test="record.empId != null">
				emp_id = #{record.empId,jdbcType=INTEGER},
			</if>
			<if test="record.empName != null">
				emp_name = #{record.empName,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=CHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.dId != null">
				d_id = #{record.dId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update employee
		set emp_id = #{record.empId,jdbcType=INTEGER},
		emp_name
		= #{record.empName,jdbcType=VARCHAR},
		gender =
		#{record.gender,jdbcType=CHAR},
		email =
		#{record.email,jdbcType=VARCHAR},
		d_id = #{record.dId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hrms.bean.Employee">
		update employee
		<set>
			<if test="empName != null">
				emp_name = #{empName,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=CHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="dId != null">
				d_id = #{dId,jdbcType=INTEGER},
			</if>
		</set>
		where emp_id = #{empId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hrms.bean.Employee">
		update employee
		set emp_name = #{empName,jdbcType=VARCHAR},
		gender =
		#{gender,jdbcType=CHAR},
		email = #{email,jdbcType=VARCHAR},
		d_id =
		#{dId,jdbcType=INTEGER},
		jobid =
		#{jobid,jdbcType=INTEGER}
		where emp_id = #{empId,jdbcType=INTEGER}
	</update>
</mapper>